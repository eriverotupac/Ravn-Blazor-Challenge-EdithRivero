@page "/"

@inject PeopleService PeopleService

<div class="row">
    <div class="col-sm-4 people-panel-list">
        @if (manyPeople == null)
        {
            <div class="col-sm-12">
                <Loading TextLoading="Loading" />
            </div>
        }
        else
        {
            <ul>
                @foreach (People people in manyPeople)
                {
                    <li class="person-cell">
                        <div class="row">
                            <div class="col-sm-10">
                                <span class="person-text-bold">
                                    @people.Name
                                    <br />
                                    <span class="person-text-low-emphasis">
                                        @string.Concat(@people.Gender, " from ", @people.Planet)
                                    </span>
                                </span>
                            </div>
                            <div class="col-sm-2">
                                <span class="oi oi-chevron-right person-text-icon" @onclick="(()=>ShowDetails(people.Name))"></span>
                            </div>
                        </div>
                    </li>
                }
                @if (showLoading)
                {
                    <li class="person-cell">
                        <span class="loading-cell-pointer" @onclick="(() => AddMoreItems())"><Loading TextLoading="Click for loading more items..." /></span>
                    </li>
                }
            </ul>
        }

    </div>

    @if (requestDetails)
    {
        <div class="col-sm-8 people-panel-info">
            <div class="parent-cell-header">
                <span class="parent-cell-text-header">General Information</span>
            </div>
            <div class="col-sm-12 info-cell">
                <span class="info-cell-text-label"> Eye Color</span>
                <span class="info-cell-text-value">@requestedPeople.Eye</span>
            </div>
            <div class="col-sm-12 info-cell">
                <span class="info-cell-text-label"> Hair Color</span>
                <span class="info-cell-text-value">@requestedPeople.Hair</span>
            </div>
            <div class="col-sm-12 info-cell">
                <span class="info-cell-text-label"> Skin Color</span>
                <span class="info-cell-text-value">@requestedPeople.Skin</span>
            </div>
            <div class="col-sm-12 info-cell">
                <span class="info-cell-text-label">Birth Year</span>
                <span class="info-cell-text-value">@requestedPeople.Birth</span>
            </div>
            @if (requestedPeople.Vehicles.Length > 0)
            {
                <div class="parent-cell-header">
                    <span class="parent-cell-text-header">Vehicles</span>
                </div>
                @foreach (var vehicleName in requestedPeople.Vehicles)
                {
                    <div class=" col-sm-12 info-cell">
                        <span class="info-cell-text-label">@vehicleName </span>
                    </div>
                }
            }
            else
            {
                @string.Empty;
            }
        </div>
    }
</div>
@code {
    private List<People> manyPeople;
    private bool requestDetails = false;
    private People requestedPeople = new People();
    int pageCounter = 1;
    private bool showLoading = true;

    protected override async Task OnInitializedAsync()
    {
        manyPeople = await PeopleService.GetPeople(pageCounter);
        pageCounter++;
    }

    private void ShowDetails(string name)
    {
        requestDetails = true;
        requestedPeople = (People)manyPeople.FirstOrDefault(x => x.Name == name);
    }

    private async void AddMoreItems()
    {
        var newRequest = await PeopleService.GetPeople(pageCounter);
        if (newRequest != null)
        {
            manyPeople.AddRange(newRequest);
            pageCounter++;
        }
        else
        {
            showLoading = false;
        }
        StateHasChanged();
    }
}
